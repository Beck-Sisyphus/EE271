|DE1_SoC
CLOCK_50 => CLOCK_50.IN1
HEX0[0] <= playTugOfWar:dut.display
HEX0[1] <= playTugOfWar:dut.display
HEX0[2] <= playTugOfWar:dut.display
HEX0[3] <= playTugOfWar:dut.display
HEX0[4] <= playTugOfWar:dut.display
HEX0[5] <= playTugOfWar:dut.display
HEX0[6] <= playTugOfWar:dut.display
HEX1[0] <= <VCC>
HEX1[1] <= <VCC>
HEX1[2] <= <VCC>
HEX1[3] <= <VCC>
HEX1[4] <= <VCC>
HEX1[5] <= <VCC>
HEX1[6] <= <VCC>
HEX2[0] <= <VCC>
HEX2[1] <= <VCC>
HEX2[2] <= <VCC>
HEX2[3] <= <VCC>
HEX2[4] <= <VCC>
HEX2[5] <= <VCC>
HEX2[6] <= <VCC>
HEX3[0] <= playTugOfWar:dut.displayCyber
HEX3[1] <= playTugOfWar:dut.displayCyber
HEX3[2] <= playTugOfWar:dut.displayCyber
HEX3[3] <= playTugOfWar:dut.displayCyber
HEX3[4] <= playTugOfWar:dut.displayCyber
HEX3[5] <= playTugOfWar:dut.displayCyber
HEX3[6] <= playTugOfWar:dut.displayCyber
HEX4[0] <= <VCC>
HEX4[1] <= <VCC>
HEX4[2] <= <VCC>
HEX4[3] <= <VCC>
HEX4[4] <= <VCC>
HEX4[5] <= <VCC>
HEX4[6] <= <VCC>
HEX5[0] <= <VCC>
HEX5[1] <= <VCC>
HEX5[2] <= <VCC>
HEX5[3] <= <VCC>
HEX5[4] <= <VCC>
HEX5[5] <= <VCC>
HEX5[6] <= <VCC>
KEY[0] => KEY[0].IN1
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] <= <GND>
LEDR[1] <= playTugOfWar:dut.LEDR
LEDR[2] <= playTugOfWar:dut.LEDR
LEDR[3] <= playTugOfWar:dut.LEDR
LEDR[4] <= playTugOfWar:dut.LEDR
LEDR[5] <= playTugOfWar:dut.LEDR
LEDR[6] <= playTugOfWar:dut.LEDR
LEDR[7] <= playTugOfWar:dut.LEDR
LEDR[8] <= playTugOfWar:dut.LEDR
LEDR[9] <= playTugOfWar:dut.LEDR
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => SW[6].IN1
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
SW[9] => SW[9].IN3


|DE1_SoC|clock_divider:cdiv
clock => divided_closcks[0]~reg0.CLK
clock => divided_closcks[1]~reg0.CLK
clock => divided_closcks[2]~reg0.CLK
clock => divided_closcks[3]~reg0.CLK
clock => divided_closcks[4]~reg0.CLK
clock => divided_closcks[5]~reg0.CLK
clock => divided_closcks[6]~reg0.CLK
clock => divided_closcks[7]~reg0.CLK
clock => divided_closcks[8]~reg0.CLK
clock => divided_closcks[9]~reg0.CLK
clock => divided_closcks[10]~reg0.CLK
clock => divided_closcks[11]~reg0.CLK
clock => divided_closcks[12]~reg0.CLK
clock => divided_closcks[13]~reg0.CLK
clock => divided_closcks[14]~reg0.CLK
clock => divided_closcks[15]~reg0.CLK
clock => divided_closcks[16]~reg0.CLK
clock => divided_closcks[17]~reg0.CLK
clock => divided_closcks[18]~reg0.CLK
clock => divided_closcks[19]~reg0.CLK
clock => divided_closcks[20]~reg0.CLK
clock => divided_closcks[21]~reg0.CLK
clock => divided_closcks[22]~reg0.CLK
clock => divided_closcks[23]~reg0.CLK
clock => divided_closcks[24]~reg0.CLK
clock => divided_closcks[25]~reg0.CLK
clock => divided_closcks[26]~reg0.CLK
clock => divided_closcks[27]~reg0.CLK
clock => divided_closcks[28]~reg0.CLK
clock => divided_closcks[29]~reg0.CLK
clock => divided_closcks[30]~reg0.CLK
clock => divided_closcks[31]~reg0.CLK
divided_closcks[0] <= divided_closcks[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[1] <= divided_closcks[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[2] <= divided_closcks[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[3] <= divided_closcks[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[4] <= divided_closcks[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[5] <= divided_closcks[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[6] <= divided_closcks[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[7] <= divided_closcks[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[8] <= divided_closcks[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[9] <= divided_closcks[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[10] <= divided_closcks[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[11] <= divided_closcks[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[12] <= divided_closcks[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[13] <= divided_closcks[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[14] <= divided_closcks[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[15] <= divided_closcks[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[16] <= divided_closcks[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[17] <= divided_closcks[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[18] <= divided_closcks[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[19] <= divided_closcks[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[20] <= divided_closcks[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[21] <= divided_closcks[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[22] <= divided_closcks[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[23] <= divided_closcks[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[24] <= divided_closcks[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[25] <= divided_closcks[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[26] <= divided_closcks[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[27] <= divided_closcks[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[28] <= divided_closcks[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[29] <= divided_closcks[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[30] <= divided_closcks[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divided_closcks[31] <= divided_closcks[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|LSDR:randomNumber
clk => out[0]~reg0.CLK
clk => out[1]~reg0.CLK
clk => out[2]~reg0.CLK
clk => out[3]~reg0.CLK
clk => out[4]~reg0.CLK
clk => out[5]~reg0.CLK
clk => out[6]~reg0.CLK
clk => out[7]~reg0.CLK
clk => out[8]~reg0.CLK
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
reset => out.OUTPUTSELECT
out[0] <= out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[7] <= out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out[8] <= out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|adder:tenBit
A[0] => Add0.IN9
A[1] => Add0.IN8
A[2] => Add0.IN7
A[3] => Add0.IN6
A[4] => Add0.IN5
A[5] => Add0.IN4
A[6] => Add0.IN3
A[7] => Add0.IN2
A[8] => Add0.IN1
B[0] => Add0.IN18
B[1] => Add0.IN17
B[2] => Add0.IN16
B[3] => Add0.IN15
B[4] => Add0.IN14
B[5] => Add0.IN13
B[6] => Add0.IN12
B[7] => Add0.IN11
B[8] => Add0.IN10
carry <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|button:button
clk => oldButton.CLK
reset => oldButton.OUTPUTSELECT
button => out.IN1
button => oldButton.DATAA
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|playTugOfWar:dut
clk => playField:field.clk
clk => victory:vic.clk
reset => playField:field.reset
reset => victory:vic.reset
L => playField:field.L
L => victory:vic.L
R => playField:field.R
R => victory:vic.R
LEDR[0] <= playField:field.LEDR[0]
LEDR[1] <= playField:field.LEDR[1]
LEDR[2] <= playField:field.LEDR[2]
LEDR[3] <= playField:field.LEDR[3]
LEDR[4] <= playField:field.LEDR[4]
LEDR[5] <= playField:field.LEDR[5]
LEDR[6] <= playField:field.LEDR[6]
LEDR[7] <= playField:field.LEDR[7]
LEDR[8] <= playField:field.LEDR[8]
display[0] <= victory:vic.display[0]
display[1] <= victory:vic.display[1]
display[2] <= victory:vic.display[2]
display[3] <= victory:vic.display[3]
display[4] <= victory:vic.display[4]
display[5] <= victory:vic.display[5]
display[6] <= victory:vic.display[6]
displayCyber[0] <= victory:vic.displayCyber[0]
displayCyber[1] <= victory:vic.displayCyber[1]
displayCyber[2] <= victory:vic.displayCyber[2]
displayCyber[3] <= victory:vic.displayCyber[3]
displayCyber[4] <= victory:vic.displayCyber[4]
displayCyber[5] <= victory:vic.displayCyber[5]
displayCyber[6] <= victory:vic.displayCyber[6]


|DE1_SoC|playTugOfWar:dut|playField:field
clk => LEDR[0]~reg0.CLK
clk => LEDR[1]~reg0.CLK
clk => LEDR[2]~reg0.CLK
clk => LEDR[3]~reg0.CLK
clk => LEDR[4]~reg0.CLK
clk => LEDR[5]~reg0.CLK
clk => LEDR[6]~reg0.CLK
clk => LEDR[7]~reg0.CLK
clk => LEDR[8]~reg0.CLK
resetField => always1.IN0
reset => always1.IN1
L => always0.IN0
L => always0.IN0
R => always0.IN1
R => always0.IN1
LEDR[0] <= LEDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= LEDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= LEDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= LEDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= LEDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= LEDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= LEDR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= LEDR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= LEDR[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|playTugOfWar:dut|victory:vic
clk => psCyb[0].CLK
clk => psCyb[1].CLK
clk => psCyb[2].CLK
clk => ps[0].CLK
clk => ps[1].CLK
clk => ps[2].CLK
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
reset => ps.OUTPUTSELECT
reset => psCyb.OUTPUTSELECT
reset => psCyb.OUTPUTSELECT
reset => psCyb.OUTPUTSELECT
leftest => always0.IN0
L => always0.IN1
L => always0.IN1
rightest => always0.IN0
R => always0.IN1
R => always0.IN1
resetField <= resetField.DB_MAX_OUTPUT_PORT_TYPE
display[0] <= decoder:human.display
display[1] <= decoder:human.display
display[2] <= decoder:human.display
display[3] <= decoder:human.display
display[4] <= decoder:human.display
display[5] <= decoder:human.display
display[6] <= decoder:human.display
displayCyber[0] <= decoder:cyber.display
displayCyber[1] <= decoder:cyber.display
displayCyber[2] <= decoder:cyber.display
displayCyber[3] <= decoder:cyber.display
displayCyber[4] <= decoder:cyber.display
displayCyber[5] <= decoder:cyber.display
displayCyber[6] <= decoder:cyber.display


|DE1_SoC|playTugOfWar:dut|victory:vic|decoder:human
state[0] => Mux0.IN10
state[0] => Mux1.IN10
state[0] => Mux2.IN10
state[0] => Mux3.IN10
state[0] => Mux4.IN10
state[0] => Mux5.IN10
state[0] => Mux6.IN10
state[1] => Mux0.IN9
state[1] => Mux1.IN9
state[1] => Mux2.IN9
state[1] => Mux3.IN9
state[1] => Mux4.IN9
state[1] => Mux5.IN9
state[1] => Mux6.IN9
state[2] => Mux0.IN8
state[2] => Mux1.IN8
state[2] => Mux2.IN8
state[2] => Mux3.IN8
state[2] => Mux4.IN8
state[2] => Mux5.IN8
state[2] => Mux6.IN8
display[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|DE1_SoC|playTugOfWar:dut|victory:vic|decoder:cyber
state[0] => Mux0.IN10
state[0] => Mux1.IN10
state[0] => Mux2.IN10
state[0] => Mux3.IN10
state[0] => Mux4.IN10
state[0] => Mux5.IN10
state[0] => Mux6.IN10
state[1] => Mux0.IN9
state[1] => Mux1.IN9
state[1] => Mux2.IN9
state[1] => Mux3.IN9
state[1] => Mux4.IN9
state[1] => Mux5.IN9
state[1] => Mux6.IN9
state[2] => Mux0.IN8
state[2] => Mux1.IN8
state[2] => Mux2.IN8
state[2] => Mux3.IN8
state[2] => Mux4.IN8
state[2] => Mux5.IN8
state[2] => Mux6.IN8
display[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
display[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
display[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
display[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
display[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
display[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
display[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


